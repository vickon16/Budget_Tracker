// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// datasource db {
//   provider = "sqlite"
//   url      = "file:./dev.db"
// }

model UserSettings {
  userId   String @id
  currency String
}

model Category {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  name      String
  userId    String
  icon      String
  type      String   @default("income")

  @@unique([name, userId, type])
}

model Transaction {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  amount      Float
  description String
  date        DateTime
  userId      String
  type        String   @default("income")

  category     String
  categoryIcon String
  MonthHistory MonthHistory[]
  YearHistory  YearHistory[]
}

model MonthHistory {
  userId        String
  day           Int
  month         Int
  year          Int
  transactionId String
  transaction   Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)
  income        Float
  expense       Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([day, month, year, userId])
}

model YearHistory {
  userId        String
  month         Int
  year          Int
  transactionId String
  transaction   Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)
  income        Float
  expense       Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([month, year, userId])
}
